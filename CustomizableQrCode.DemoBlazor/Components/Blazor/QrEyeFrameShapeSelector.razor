@using CustomizableQrCode.Models

<div class="combo-visual-group">
    <label class="combo-title">Marco - Ojo</label>
    <div class="combo-gallery">
        @foreach (var shape in (showAllShapes ? EyeFrameShapes : MainShapes))
        {
            <button type="button"
                    class="combo-option @(SelectedShape == shape.Id ? "selected" : "")"
                    @onclick="() => SelectShape(shape.Id)"
                    title="@shape.Name">
                @shape.Svg
            </button>
        }
        @if (OtherShapes.Any())
        {
            <button type="button" class="combo-expand more-btn" @onclick="ToggleShapes" aria-label="Mostrar más">
                @(showAllShapes ? "-" : "+")
            </button>
        }
        <input type="color"
               value="SelectedColor"
               class="qr-color"
               @oninput="OnColorChanged" />
    </div>
</div>

@code {
    [Parameter] public string SelectedShape { get; set; }
    [Parameter] public EventCallback<string> SelectedShapeChanged { get; set; }
    [Parameter] public string SelectedColor { get; set; }
    [Parameter] public EventCallback<string> SelectedColorChanged { get; set; }

    // Para colapsar/expandir
    private bool showAllShapes = false;
    private int maxVisible = 5; // Puedes cambiar cuántos mostrar por default

    private List<EyeFrameShapeOption> MainShapes => EyeFrameShapes.Take(maxVisible).ToList();
    private List<EyeFrameShapeOption> OtherShapes => EyeFrameShapes.Skip(maxVisible).ToList();

    private void ToggleShapes() => showAllShapes = !showAllShapes;

    public class EyeFrameShapeOption
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public MarkupString Svg { get; set; }
    }

    private List<EyeFrameShapeOption> EyeFrameShapes = new()
    {
        new EyeFrameShapeOption { Id = "Square", Name = "Square", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='4' y='4' width='24' height='24' fill='none' stroke='black' stroke-width='4' rx='2'/></svg>" },
        new EyeFrameShapeOption { Id = "Rounded", Name = "Rounded", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='4' y='4' width='24' height='24' fill='none' stroke='black' stroke-width='4' rx='8'/></svg>" },
        new EyeFrameShapeOption { Id = "Circle", Name = "Circle", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><circle cx='16' cy='16' r='12' fill='none' stroke='black' stroke-width='4'/></svg>" },
        new EyeFrameShapeOption { Id = "Leaf", Name = "Leaf", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><path d='M16 6 Q26 16 16 26 Q6 16 16 6 Z' fill='none' stroke='black' stroke-width='4'/></svg>" },
        new EyeFrameShapeOption { Id = "Diamond", Name = "Diamond", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><polygon points='16,4 28,16 16,28 4,16' fill='none' stroke='black' stroke-width='4'/></svg>" },
        new EyeFrameShapeOption { Id = "Double", Name = "Double", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='7' y='7' width='18' height='18' fill='none' stroke='black' stroke-width='3'/><rect x='11' y='11' width='10' height='10' fill='none' stroke='black' stroke-width='2'/></svg>" },
        new EyeFrameShapeOption { Id = "IrregularLeft", Name = "Irregular Left", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='5' y='4' width='22' height='24' fill='none' stroke='black' stroke-width='4' rx='10' ry='2'/></svg>" },
        new EyeFrameShapeOption { Id = "IrregularRight", Name = "Irregular Right", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='5' y='4' width='22' height='24' fill='none' stroke='black' stroke-width='4' rx='2' ry='10'/></svg>" },
        new EyeFrameShapeOption { Id = "IrregularTop", Name = "Irregular Top", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='4' y='7' width='24' height='18' fill='none' stroke='black' stroke-width='4' rx='8' ry='2'/></svg>" },
        new EyeFrameShapeOption { Id = "IrregularBottom", Name = "Irregular Bottom", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='4' y='7' width='24' height='18' fill='none' stroke='black' stroke-width='4' rx='2' ry='8'/></svg>" },
        new EyeFrameShapeOption { Id = "Wavy", Name = "Wavy", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><path d='M5,8 Q16,4 27,8 Q16,12 5,8 Z M5,24 Q16,28 27,24 Q16,20 5,24 Z' fill='none' stroke='black' stroke-width='3'/></svg>" },
        new EyeFrameShapeOption { Id = "Dotted", Name = "Dotted", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><circle cx='8' cy='8' r='2'/><circle cx='24' cy='8' r='2'/><circle cx='8' cy='24' r='2'/><circle cx='24' cy='24' r='2'/></svg>" },
        new EyeFrameShapeOption { Id = "CircleInSquare", Name = "Circle In Square", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='4' y='4' width='24' height='24' fill='none' stroke='black' stroke-width='3'/><circle cx='16' cy='16' r='8' fill='none' stroke='black' stroke-width='2'/></svg>" },
        new EyeFrameShapeOption { Id = "Pixelated", Name = "Pixelated", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='4' y='4' width='8' height='8'/><rect x='20' y='4' width='8' height='8'/><rect x='4' y='20' width='8' height='8'/><rect x='20' y='20' width='8' height='8'/></svg>" },
        new EyeFrameShapeOption { Id = "RoundedAll", Name = "Rounded All", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='4' y='4' width='24' height='24' fill='none' stroke='black' stroke-width='4' rx='12'/></svg>" },
        new EyeFrameShapeOption { Id = "CornerRect", Name = "Corner Rect", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='4' y='4' width='12' height='12' fill='none' stroke='black' stroke-width='4'/><rect x='16' y='16' width='12' height='12' fill='none' stroke='black' stroke-width='4'/></svg>" },
        new EyeFrameShapeOption { Id = "TwoCornerRect", Name = "Two Corner Rect", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='4' y='4' width='12' height='12' fill='none' stroke='black' stroke-width='4'/><rect x='16' y='16' width='12' height='12' fill='none' stroke='black' stroke-width='2'/></svg>" },
        new EyeFrameShapeOption { Id = "CornerRectRadio", Name = "Corner Rect Radio", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='4' y='4' width='12' height='12' rx='6' fill='none' stroke='black' stroke-width='4'/><rect x='16' y='16' width='12' height='12' rx='6' fill='none' stroke='black' stroke-width='2'/></svg>" },
        new EyeFrameShapeOption { Id = "TwoCornerRectIn", Name = "Two Corner Rect In", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='4' y='4' width='12' height='12' fill='none' stroke='black' stroke-width='4'/><rect x='16' y='16' width='12' height='12' fill='black' stroke='none'/></svg>" },
        new EyeFrameShapeOption { Id = "CornerRoundOut", Name = "Corner Round Out", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='4' y='4' width='12' height='12' rx='12' fill='none' stroke='black' stroke-width='4'/></svg>" },
        new EyeFrameShapeOption { Id = "CornerRoundOutSP", Name = "Corner Round Out SP", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='4' y='4' width='12' height='12' rx='12' fill='black' stroke='none'/></svg>" },
    };

    private async Task SelectShape(string id)
    {
        SelectedShape = id;
        await SelectedShapeChanged.InvokeAsync(id);
        // Si quieres cerrar al seleccionar, descomenta:
        // showAllShapes = false;
    }

    private async Task OnColorChanged(ChangeEventArgs e)
    {
        var color = e.Value?.ToString();
        SelectedColor = color;
        await SelectedColorChanged.InvokeAsync(color);
    }
}
