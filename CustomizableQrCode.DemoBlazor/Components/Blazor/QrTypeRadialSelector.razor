@using System.Threading.Tasks
@inject IJSRuntime JS

@code {
    class QrTypeOption
    {
        public string Type { get; set; }
        public string Icon { get; set; }
        public string Tooltip { get; set; }
        public double Angle { get; set; }
    }

    // List<QrTypeOption> QrTypes = new()
    // {
    //     new() { Type = "url",      Icon = "🔗",  Tooltip = "Genera un QR para un enlace web." },
    //     new() { Type = "phone",    Icon = "📞",  Tooltip = "Inicia una llamada telefónica." },
    //     new() { Type = "user",     Icon = "👤",  Tooltip = "Agrega contacto a la agenda." },
    //     new() { Type = "sms",      Icon = "💬",  Tooltip = "Envía un mensaje SMS." },
    //     new() { Type = "email",    Icon = "✉️",  Tooltip = "Abre un correo prellenado." },
    //     new() { Type = "doc",      Icon = "📄",  Tooltip = "Descarga un archivo PDF." },
    //     new() { Type = "app",      Icon = "📲",  Tooltip = "Redirige a una app móvil." },
    //     new() { Type = "custom",   Icon = "🟢",  Tooltip = "Abre chat de WhatsApp." }
    // };

    // List<QrTypeOption> QrTypes = new()
    // {
    //     new() { Type = "url",    Icon = "bi-link-45deg",  Tooltip = "Genera un QR para un enlace web." },
    //     new() { Type = "phone",  Icon = "bi-telephone-fill", Tooltip = "Inicia una llamada telefónica." },
    //     new() { Type = "user",   Icon = "bi-person-fill", Tooltip = "Agrega contacto a la agenda." },
    //     new() { Type = "sms",    Icon = "bi-chat-dots-fill", Tooltip = "Envía un mensaje SMS." },
    //     new() { Type = "email",  Icon = "bi-envelope-fill", Tooltip = "Abre un correo prellenado." },
    //     new() { Type = "doc",    Icon = "bi-file-earmark-pdf-fill", Tooltip = "Descarga un archivo PDF." },
    //     new() { Type = "app",    Icon = "bi-phone", Tooltip = "Redirige a una app móvil." },
    //     new() { Type = "custom", Icon = "bi-whatsapp", Tooltip = "Abre chat de WhatsApp." }
    // };

    List<QrTypeOption> QrTypes = new()
{
    new() { Type = "url",    Icon = "fa-solid fa-link",           Tooltip = "Genera un QR para un enlace web." },
    new() { Type = "phone",  Icon = "fa-solid fa-phone",          Tooltip = "Inicia una llamada telefónica." },
    new() { Type = "user",   Icon = "fa-solid fa-user",           Tooltip = "Agrega contacto a la agenda." },
    new() { Type = "sms",    Icon = "fa-solid fa-comment-dots",   Tooltip = "Envía un mensaje SMS." },
    new() { Type = "email",  Icon = "fa-solid fa-envelope",       Tooltip = "Abre un correo prellenado." },
    new() { Type = "doc",    Icon = "fa-solid fa-file-pdf",       Tooltip = "Descarga un archivo PDF." },
    new() { Type = "app",    Icon = "fa-solid fa-mobile-screen",  Tooltip = "Redirige a una app móvil." },
    new() { Type = "custom", Icon = "fa-brands fa-whatsapp",      Tooltip = "Abre chat de WhatsApp." }
};

    string SelectedType { get; set; } = "url";

    int SelectedIndex = 0;
    string CenterFadeClass = "";

    // Referencias a los botones, usando el Id único
    ElementReference[] ButtonRefs = new ElementReference[20]; // O ajusta el tamaño a tus opciones

    double GetAngle(int i) => i * (360.0 / QrTypes.Count);


    protected override void OnInitialized()
    {
        // Ángulo automático
        int n = QrTypes.Count;
        for (int i = 0; i < n; i++)
            QrTypes[i].Angle = i * (360.0 / n);
    }


    void SelectType(string type)
    {
        if (SelectedType != type)
        {
            SelectedType = type;
            StateHasChanged();
        }
    }

    QrTypeOption SelectedOption => QrTypes.FirstOrDefault(o => o.Type == SelectedType);
}
<div class="radial-selector-container" aria-label="Selector tipo de QR">
    <div class="radial-selector">
        @foreach (var option in QrTypes)
        {
            var isSelected = option.Type == SelectedType;

            <button class="radial-btn @(isSelected ? "selected pulse" : "")"
                    style="--btn-angle:@($"{option.Angle}deg")"
                    @onclick="() => SelectType(option.Type)" 
                    tabindex="0" >
                <span class="radial-icon" aria-hidden="true">
                    <i class="@option.Icon"></i>
                </span>
                @if (isSelected)
                {
                    <span class="tick-check">✔️</span>
                }
                <span class="radial-tooltip">@option.Tooltip</span>
            </button>
        }
        <div class="radial-center @CenterFadeClass" tabindex="0" aria-live="polite">
            <span class="center-icon"><i class="@SelectedOption.Icon"></i></span>
            @* <div class="center-label">@SelectedOption.Label</div> *@
            <div class="center-desc">@SelectedOption.Tooltip</div>
        </div>
    </div>
</div>
