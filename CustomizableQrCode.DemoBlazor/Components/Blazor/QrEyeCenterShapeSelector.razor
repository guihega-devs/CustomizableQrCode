@using CustomizableQrCode.Models

<div class="combo-visual-group">
    <label class="combo-title">Centro - Ojo</label>
    <div class="combo-gallery">
        @foreach (var shape in (showAllShapes ? EyeCenterShapes : MainShapes))
        {
            <button type="button"
                    class="combo-option @(SelectedEyeShape == shape.Id ? "selected" : "")"
                    @onclick="() => SelectEyeShape(shape.Id)"
                    title="@shape.Name"
                    aria-label="@shape.Name">
                @shape.Svg
            </button>
        }
        @if (OtherShapes.Any())
        {
            <button type="button" class="combo-expand more-btn" @onclick="ToggleShapes" aria-label="Mostrar más">
                @(showAllShapes ? "-" : "+")
            </button>
        }
        <input type="color"
               value="SelectedEyeColor"
               class="qr-color"
               @oninput="OnColorEyeChanged" />
    </div>
</div>

@code {
    [Parameter] public string SelectedEyeShape { get; set; }
    [Parameter] public EventCallback<string> SelectedEyeShapeChanged { get; set; }
    [Parameter] public string SelectedEyeColor { get; set; }
    [Parameter] public EventCallback<string> SelectedEyeColorChanged { get; set; }

    // Expandible/collapsable
    private bool showAllShapes = false;
    private int maxVisible = 5;

    private List<EyeCenterShapeOption> MainShapes => EyeCenterShapes.Take(maxVisible).ToList();
    private List<EyeCenterShapeOption> OtherShapes => EyeCenterShapes.Skip(maxVisible).ToList();

    private void ToggleShapes() => showAllShapes = !showAllShapes;

    public class EyeCenterShapeOption
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public MarkupString Svg { get; set; }
    }

    private List<EyeCenterShapeOption> EyeCenterShapes = new()
    {
        new EyeCenterShapeOption { Id = "Square", Name = "Square", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='8' y='8' width='16' height='16' fill='black' stroke='black' stroke-width='0' rx='2'/></svg>" },
        new EyeCenterShapeOption { Id = "Circle", Name = "Circle", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><circle cx='16' cy='16' r='8' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "Diamond", Name = "Diamond", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><polygon points='16,8 24,16 16,24 8,16' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "Rounded", Name = "Rounded", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='8' y='8' width='16' height='16' fill='black' rx='8'/></svg>" },
        new EyeCenterShapeOption { Id = "Point", Name = "Point", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><polygon points='16,6 21,26 11,26' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "Leaf", Name = "Leaf", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><ellipse cx='16' cy='16' rx='9' ry='5' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "CornerRect", Name = "Corner Rect", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='8' y='8' width='8' height='8' fill='black'/><rect x='16' y='16' width='8' height='8' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "TwoCornerRect", Name = "Two Corner Rect", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='8' y='8' width='8' height='8' fill='black'/><rect x='16' y='8' width='8' height='8' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "CornerRectRadio", Name = "Corner Rect Radio", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='8' y='8' width='8' height='8' rx='5' fill='black'/><rect x='16' y='16' width='8' height='8' rx='5' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "TwoCornerRectIn", Name = "Two Corner Rect In", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='8' y='16' width='8' height='8' fill='black'/><rect x='16' y='8' width='8' height='8' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "CornerRoundOut", Name = "Corner Round Out", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='8' y='8' width='16' height='16' rx='16' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "Plus", Name = "Plus", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='14' y='8' width='4' height='16' fill='black'/><rect x='8' y='14' width='16' height='4' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "Star", Name = "Star", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><polygon points='16,8 18,14 24,14 19,17 21,23 16,19 11,23 13,17 8,14 14,14' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "Starburst", Name = "Starburst", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><g fill='black'><polygon points='16,8 18,16 16,24 14,16'/><polygon points='8,16 16,18 24,16 16,14'/></g></svg>" },
        new EyeCenterShapeOption { Id = "ConcaveSquircle", Name = "Concave Squircle", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><path d='M10,16 Q10,10 16,10 Q22,10 22,16 Q22,22 16,22 Q10,22 10,16 Z' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "DiagonalCut", Name = "Diagonal Cut", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><polygon points='8,24 24,8 24,24 8,8' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "TripleBar", Name = "Triple Bar", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='11' y='10' width='10' height='2' fill='black'/><rect x='11' y='15' width='10' height='2' fill='black'/><rect x='11' y='20' width='10' height='2' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "TripleBarV", Name = "Triple Bar V", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='10' y='11' width='2' height='10' fill='black'/><rect x='15' y='11' width='2' height='10' fill='black'/><rect x='20' y='11' width='2' height='10' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "BubbleGrid", Name = "Bubble Grid", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><circle cx='12' cy='12' r='3' fill='black'/><circle cx='20' cy='12' r='3' fill='black'/><circle cx='12' cy='20' r='3' fill='black'/><circle cx='20' cy='20' r='3' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "BubbleOver", Name = "Bubble Over", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><circle cx='16' cy='14' r='4' fill='black'/><circle cx='16' cy='20' r='3' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "BlockGrid", Name = "Block Grid", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='10' y='10' width='4' height='4' fill='black'/><rect x='18' y='10' width='4' height='4' fill='black'/><rect x='10' y='18' width='4' height='4' fill='black'/><rect x='18' y='18' width='4' height='4' fill='black'/></svg>" },
        new EyeCenterShapeOption { Id = "IrregularSquare", Name = "Irregular Square", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><rect x='10' y='10' width='12' height='12' fill='black' rx='4' ry='1'/></svg>" },
        new EyeCenterShapeOption { Id = "WavySquare", Name = "Wavy Square", Svg = (MarkupString)@"<svg viewBox='0 0 32 32' width='28' height='28'><path d='M10,10 Q16,5 22,10 Q27,16 22,22 Q16,27 10,22 Q5,16 10,10 Z' fill='black'/></svg>" },
    };

    private async Task SelectEyeShape(string id)
    {
        SelectedEyeShape = id;
        await SelectedEyeShapeChanged.InvokeAsync(id);
        // Si quieres que colapse la galería después de seleccionar:
        // showAllShapes = false;
    }

    private async Task OnColorEyeChanged(ChangeEventArgs e)
    {
        var color = e.Value?.ToString();
        SelectedEyeColor = color;
        await SelectedEyeColorChanged.InvokeAsync(color);
    }
}
